&INIT_NAMELIST_VERSION
      gridvernum =      6,
/
&INIT_GRID_DESCRIPTION
         gcmname = 'MITgcm',
       gcmsource = 'http://mitgcm.org/',
        gridname = 'Lac LÃ©man low res',
      gridsource = 'A. Cimatoribus',
        griddesc = 'Curvilinear orthogonal, ~200m resolution, 35 vertical levels',
       indatadir = '$ddir',
/
&INIT_CASE_DESCRIPTION
        caseNum  = $cn,
        casedesc = 'Release from Rhone area',
/
&INIT_GRID_SIZE
             imt =    340,
             jmt =     64,
              km =     35,
             nst =      2,
         subgrid =      0,
     subgridimin =     -1,
     subgridimax =     -1,
     subgridjmin =     -1,
     subgridjmax =     -1,
     subgridfile =     '',
       subgridid =      1,
/
&INIT_TIME
! Define the time parameters:
! ngcm   : number of hours between GCM output
! dtgcm  : time step in seconds of the GCM simulation
! intmin : initial time step number of GCM, the simulation will start from this
! intspin : seeding time in steps (of output of GCM simulation)
! endJD  : number of days of the particle tracking simulation
! iter   : number of time steps between GCM output
! skipseed: seed every skipseed GCM outputs (if 1, seed all the time)
            ngcm    =     0.5,
            dtgcm   =      20,
            intmin  = 3283290,
            intspin =    4320,
            endJD   =      90,
            iter    =    1200,
            skipseed=       2,
/
&INIT_WRITE_TRAJS
      twritetype =      2,
! kriva:          0 = no writing
!                 1 = write at time intervals of gcm datasets (each ints)
!                 2 = write at each time iteration
!                 3 = write all the time
!                 4 = write only start and end positions
!                 5 = write at chosen intervals
!                 6 = write each spatial grid-crossing 
           kriva =      1,
      outdatadir = '',
     outdatafile = 'leman',
 intmininoutfile =      0,
/
&INIT_SEEDING
! nff:            1 = Follow trajectories forward
!                 2 = Follow trajectories backward
!                 3 = Follow trajectories both ways.
             nff =      1,
! isec:           1 = Seed particles meridional from the east (y-z)
!                 2 = Seed particles zonal from the north (x-z)
!                 3 = Seed particles horiz from top (x-y)
!                 4 = Seed particles in the middle of T-box
!                 5 = Seed at given x-y-z point (note this can only be passed
!                     via the seed file, here it has no effect)
            isec =      4,
! idir:           1 = follow positive direction (eastward/northward)  
!                -1 = follow negative direction (westward/southward)
!                 0 = both directions
            idir =      0,
! === Number of trajectories can be set by
! nqua:           1 = constant number of particles in all boxes
!                     (partQuant in # particles / gridcell)
!                 2 = Each particle reflects flux at seeding. 
!                     (partQuant in m3s-1. per particle)
!                 3 = Each particle reflects volume at seeding.
!                     (partQuant in m3 per particle)
!                 4 = Set number of particles in seed file.
!                     (partQuant is not used)
            nqua =      3,
! === Particles seeded (particles/cell or m3s-1/particle or m3/particle)
       partquant =    1e5,
        ntracmax = 1000000,
    loneparticle =     -1,
! === initial directions all in MODEL COORDINATES ===
! Method for seeding particles.
! seedtype:       1 = Seed an area defined by ist, jst, and kst.
!                 2 = Use a list to define which cells to seed.
!                 3 = Use a 2-D mask file.
        seedtype =      2,
            ist1 =     -1,
            ist2 =     -1,
            jst1 =     -1,
            jst2 =     -1,
! k goes from 1 (bottom) upwards
            kst1 =     -1,
            kst2 =     -1,
            tst1 =     -1,
            tst2 =     -1,
         seeddir =     '/home/cimatori/Work/tracmass/projects/MITgcm_leman_mp/',
        seedfile =     'seed.txt',
     varseedfile =      0,
! 1: seed between tst1 and tst2
! 2: seed in file-defined time definition
        seedtime =      0,
! 1: All particles are seeded at each seeding time step
! 2: Each seed position is used once
         seedall =      1,
! 1: seed at i,j,k positions
! 2: seed at x,y,z positions (?)
         seedpos =      2,
       seedparts =      0,
     seedpart_id =      0,
/
&INIT_KILLZONES
! Kill trajectories reaching the Rhone outflow channel
            nend =      1,
            ienw =      0,
            iene =      3,
            jens =      0,
            jenn =     64,
           timax = 36500.0,
/
&INIT_TEMP_SALT
           tmin0 =  -50.0,
           tmax0 =  400.0,
           smin0 = -500.0,
           smax0 =  400.0,
           rmin0 = -100.0,
           rmax0 =  500.0,
           tmine =  -50.0,
           tmaxe =  400.0,
           smine = -150.0,
           smaxe =  500.0,
           rmine = -100.0,
           rmaxe =  500.0,
/
&INIT_DIFFUSION
              ah = 2000.0,
              av =    0.0,
/
&INIT_SEDIMENT
        partdiam =  0.001,
            rhos = 2620.0,
           cwamp =   20.0,
           twave =    8.0,
         critvel =    0.1,
/
